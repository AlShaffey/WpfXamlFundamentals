<Window x:Class="WpfXaml.AlternateReferenceSyntax"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfXaml"
        xmlns:m="clr-namespace:WpfXaml.Masters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="AlternateReferenceSyntax" Height="450" Width="800">
    <Window.Resources>
        <SolidColorBrush x:Key="m2Orange" Color="OrangeRed"></SolidColorBrush>
        <SolidColorBrush x:Key="m2Red" Color="DarkRed"></SolidColorBrush>
        <sys:String x:Key="hello">Hello from Resource.</sys:String>
    </Window.Resources>
    <m:MasterControl>
        <m:MasterControl.Content>
            <Button Height="50" Width="150" BorderThickness="7">
                <Button.BorderBrush>
                    <StaticResource ResourceKey="m2Red">
                    </StaticResource>
                </Button.BorderBrush>
                <Button.Background>
                    <DynamicResource ResourceKey="m2Orange"></DynamicResource>
                </Button.Background>
                <StaticResource ResourceKey="hello"></StaticResource>
            </Button>
        </m:MasterControl.Content>
        <m:MasterControl.Description>
            <StackPanel>
                <TextBlock>It is not required to use the curly braces for referring to resources in XAML.</TextBlock>
                <TextBlock>Full property syntax can be used as well, as a full XML element.</TextBlock>
                <TextBlock>Thus, a resource reference can be used where attributes can't be used.</TextBlock>
                <TextBlock>Here there are 3 window resources:</TextBlock>
                <TextBlock>Solid color brush of key "m2Orange".</TextBlock>
                <TextBlock>Solid color brush of key "m2Red".</TextBlock>
                <TextBlock>And finally a string resources of key "hello".</TextBlock>
                <TextBlock>And the window is consisting of a Button.</TextBlock>
                <TextBlock>Where m2Red resource is bound to the button border brush property statically as a full property.</TextBlock>
                <TextBlock>Where m2Orange resource is bound to the button background property dynamically as a full property.</TextBlock>
                <TextBlock>And finally, the hello resource is declared statically as a button content directly, where it can't be applied as an attribute here.</TextBlock>
                <TextBlock>Since the resource key must be set through the Resource Key attribute.</TextBlock>
                <TextBlock>Where the Resource Key must be passed as a constructor argument to the markup.</TextBlock>
                <TextBlock>But XAML doesn't offer a way to call a parameterized constructor for full elements.</TextBlock>
                <TextBlock>This is supported only from markup extensions.</TextBlock>
                <TextBlock>So, we need to use full attribute.</TextBlock>
            </StackPanel>
        </m:MasterControl.Description>
    </m:MasterControl>
</Window>
