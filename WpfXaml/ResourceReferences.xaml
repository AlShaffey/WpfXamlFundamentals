<Window x:Class="WpfXaml.ResourceReferences"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfXaml"
        xmlns:m="clr-namespace:WpfXaml.Masters"
        mc:Ignorable="d"
        Title="ResourceReferences" Height="750" Width="1200">
    <Window.Resources>
        <SolidColorBrush x:Key="brushResource" Color="Orange"></SolidColorBrush>
    </Window.Resources>
        <m:MasterControl>
        <m:MasterControl.Content>
            <StackPanel>
                <Rectangle Height="50" Margin="30" Fill="{StaticResource brushResource}"></Rectangle>
                <Rectangle Height="50" Margin="30" Fill="{DynamicResource brushResource}"></Rectangle>
                <Rectangle Height="50" Margin="30" x:Name="StaticRectangle"></Rectangle>
                <Rectangle Height="50" Margin="30" x:Name="DynamicRectangle"></Rectangle>
                <Button Click="Button_Click">Change Resource</Button>
            </StackPanel>
        </m:MasterControl.Content>
        <m:MasterControl.Description>
            <StackPanel>
                <TextBlock>A solid color brush resource of originally Orange color.</TextBlock>
                <TextBlock>With 4 Rectangles.</TextBlock>
                <TextBlock>1st, fill property is bound to the solid color brush resource using Static Resource markup extension (static binding in XAML).</TextBlock>
                <TextBlock>2nd, fill property is bound to the solid color brush resource using Synamic Resource markup extension (dynamic binding in XAML).</TextBlock>
                <TextBlock>3rd, fill property is bound to the solid color brush resource using Find Resource method in code behind (static binding in code behind).</TextBlock>
                <TextBlock>4th, fill property is bound to the solid color brush resource using Set Resource Reference method in code behind (dynamic binding in code behind).</TextBlock>
                <TextBlock>With a Change Resource Button to change the shared resource value from Orange to Red at runtime.</TextBlock>
                <TextBlock>Initially when the window is loaded the 4 rectangles will be displayed filled with Orange color.</TextBlock>
                <TextBlock>Then, when the button is clicked, the 2nd and 4th rectangles fill property will be changed to Red since they are bound dynamically to the shared resource.</TextBlock>
            </StackPanel>
        </m:MasterControl.Description>
    </m:MasterControl>
</Window>
