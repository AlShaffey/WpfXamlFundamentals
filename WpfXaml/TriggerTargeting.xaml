<Window x:Class="WpfXaml.TriggerTargeting"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfXaml"
        xmlns:m="clr-namespace:WpfXaml.Masters"
        mc:Ignorable="d"
        Title="TriggerTargeting" Height="450" Width="800">
    <m:MasterControl>
        <m:MasterControl.Content>
            <Button Width="70" Height="30">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Ellipse x:Name="targetButton" Fill="{TemplateBinding Background}"></Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="targetButton" Property="Fill" Value="Orange"></Setter>
                                <Setter TargetName="targetButton" Property="Stroke" Value="Black"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="targetButton" Property="StrokeThickness" Value="7"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                _Ok
            </Button>
        </m:MasterControl.Content>
        <m:MasterControl.Description>
            <StackPanel>
                <TextBlock>The ellipse hear is a named element inside the template called "targetButton".</TextBlock>
                <TextBlock>Where the setters in the triggers explicitly specify that "targetButton" is their target.</TextBlock>
                <TextBlock>By this, triggers effects are remained encapsulated inside within the template.</TextBlock>
                <TextBlock>Which also enables triggers to have an effect of parts of the template that don't directly correspond to the Control public properties.</TextBlock>
            </StackPanel>
        </m:MasterControl.Description>
    </m:MasterControl>
</Window>
